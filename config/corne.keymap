/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&sl {
    release-after-ms = <2000>;
};

&sk {
    quick-release;
};

/ {
    behaviors {
        td_i3: tap_dance_i3_workspace {
            compatible = "zmk,behavior-tap-dance";
            label = "ZM_tapdance_i3";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LGUI>, <&sl 2>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
  &kp ESC  &kp Q  &kp W     &kp E      &kp R      &kp T       &kp Y     &kp U      &kp I    &kp O     &kp P  &kp LBKT
 &sk CAPS  &kp A  &kp S     &kp D      &kp F      &kp G       &kp H     &kp J      &kp K    &kp L  &kp SEMI  &kp SQT
&sk LSHFT  &kp Z  &kp X     &kp C      &kp V      &kp B       &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mo 1
                            &td_i3 &sk LCTRL  &kp SPACE       &kp LC(BSPC)  &sl 2  &sk RALT
            >;
        };

        adjust_layer {
            bindings = <
&kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&kp F1      &kp F2        &kp F3        &kp F4      &kp F5      &kp F6         &out OUT_BLE  &out OUT_USB  &none         &none         &none         &none
&kp F7      &kp F8        &kp F9        &kp F10     &kp F11     &kp F12        &tog 3         &none         &none         &none         &none         &kp PAUSE_BREAK
                                              &trans    &trans    &none        &none        &trans        &none
            >;
        };

        neo_layer_4 {
            bindings = <
&none      &kp PG_UP &kp BSPC &kp UP     &kp DEL   &kp PG_DN      &none  &kp N7  &kp N8  &kp N9  &none  &none
&none      &kp HOME  &kp LEFT &kp DOWN   &kp RIGHT &kp END        &none  &kp N4  &kp N5  &kp N6  &none  &none
&sk LSHFT  &kp ESC   &kp TAB  &kp INSERT &kp ENTER &kp K_UNDO     &none  &kp N1  &kp N2  &kp N3  &none  &none
                                  &kp LGUI  &sk LCTRL  &kp N0     &none    &trans     &sk RSHFT
            >;
        };

        gaming_layer {
            bindings = <
  &kp ESC  &kp Q  &kp W     &kp E      &kp R      &kp T       &kp Y     &kp N7      &kp N8    &kp N9     &kp P  &kp LBKT
 &kp CAPS  &kp A  &kp S     &kp D      &kp F      &kp G       &kp H     &kp N4      &kp N5    &kp N6  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C      &kp V      &kp B       &kp N     &kp N1      &kp N2    &kp N3  &kp FSLH  &tog 3
                            &td_i3 &kp LCTRL  &kp SPACE       &kp LC(BSPC)  &sl 2  &kp RALT
            >;
        };
    };
};
